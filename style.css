/* style.css */

/* Definindo a cor principal "vinho" e o contraste */
:root {
    --primary-red-rgb: 186, 0, 0; /* RGB para #ba0000 */
    --primary-red: #ba0000; /* Cor vermelha do fundo da imagem 2 */
    --secondary-red: #8f0000; /* Um tom mais escuro para hover/destaque */
    --dark-background: #00000042;
    --light-text: #f0f0f0;
    --medium-gray: #444;
    --light-gray: #2c2c2c;
}

body {
    font-family: 'Montserrat', sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 0;
    background-color: var(--dark-background);
    color: var(--light-text);
    overflow-x: hidden; /* Evita rolagem horizontal indesejada no body */
    min-height: 100vh;
    padding: 20px;
    box-sizing: border-box;
}

/* Estilo para o logo Yazaki */
.yazaki-logo {
    position: absolute;
    top: 20px;
    left: 20px;
    width: 500px;
    height: auto;
    z-index: 100;
    opacity: 0.5;
    transition: opacity 0.3s ease;
}

.yazaki-logo:hover {
    opacity: 1;
}

h1 {
    color: var(--primary-red);
    margin-bottom: 25px;
    font-weight: 700;
    font-size: 2.5em;
    letter-spacing: 1px;
}

h2 {
    color: var(--light-text);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    padding-bottom: 10px;
    margin-bottom: 20px;
    font-weight: 600;
}

.controls {
    margin-bottom: 30px;
    padding: 20px 30px;
    background-color: var(--light-gray);
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    display: flex;
    gap: 20px;
    align-items: center;
    flex-wrap: wrap;
    justify-content: center;
}

.controls label {
    font-weight: bold;
    color: var(--primary-red);
    font-size: 1.1em;
}

.controls select,
.controls button,
.controls input {
    padding: 10px 15px;
    border-radius: 8px;
    border: 1px solid var(--medium-gray);
    font-size: 1rem;
    cursor: pointer;
    background-color: #3a3a3a;
    color: var(--light-text);
    transition: background-color 0.2s, border-color 0.2s, box-shadow 0.2s;
}

.controls input::placeholder {
    color: #aaa;
}

.controls .separator {
    color: #555;
    font-size: 1.8rem;
}

.controls button {
    background-color: var(--primary-red);
    color: white;
    border-color: var(--primary-red);
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.controls button:hover {
    background-color: var(--secondary-red);
    border-color: var(--secondary-red);
    box-shadow: 0 4px 10px rgba(var(--primary-red-rgb), 0.4);
}

/* Ajuste de Largura - Contêiner principal para ter mais espaço */
.main-layout-container {
    display: flex;
    gap: 25px;
    width: 100%;
    max-width: 95vw; /* Ocupa 95% da largura da viewport */
    background-color: #222;
    border-radius: 12px;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
    padding: 30px;
    align-items: flex-start;
    overflow-x: auto; /* Adicionado para permitir rolagem horizontal no contêiner principal */
}

/* Ajuste das barras laterais para largura fixa, liberando espaço para o centro */
.left-panel, .right-panel {
    width: 280px; /* Largura fixa para as paletas */
    flex-shrink: 0; /* Não permite que encolham */
    border: 1px dashed var(--medium-gray);
    background-color: var(--light-gray);
    padding: 20px;
    border-radius: 10px;
    max-height: 80vh;
    overflow-y: auto;
    box-shadow: inset 0 0 10px rgba(0,0,0,0.1);
}

/* Regras para organizar as OTs em duplas/grupos */
.ot-palette {
    display: flex;
    flex-direction: column; /* Empilha os GRUPOS de OTs verticalmente */
    flex-wrap: nowrap; /* Impede que os GRUPOS quebrem a linha */
    gap: 0; /* Remove o espaçamento global entre os itens, pois o .ot-group já lida com isso */
    align-content: flex-start;
}

.ot-group {
    display: flex; /* Habilita o Flexbox para organizar as OTs dentro do grupo */
    flex-direction: row; /* Coloca as OTs lado a lado */
    align-items: center; /* Alinha verticalmente no centro se tiverem alturas diferentes */
    justify-content: space-between; /* Distribui as OTs para as extremidades do grupo */
    gap: 5px; /* Espaço mínimo entre as OTs dentro de um grupo */
    margin-bottom: 10px; /* Espaço vertical entre os diferentes grupos de OTs */
    width: 100%; /* Garante que o grupo ocupe a largura total da paleta */
    position: relative; /* Para a linha de conexão se desejar */
    padding: 5px 0; /* Espaçamento interno para a linha */
}

/* Linha de conexão entre as OTs - opcional, mas pode ser adicionada com pseudo-elementos */
.ot-group::before {
    content: '';
    position: absolute;
    top: 50%; /* Alinha verticalmente no meio */
    left: 30px; /* Começa após a primeira OT */
    right: 30px; /* Termina antes da segunda OT */
    height: 2px; /* Espessura da linha */
    background-color: rgba(255, 255, 255, 0.2); /* Cor da linha */
    z-index: 0; /* Fica atrás das imagens das OTs */
    transform: translateY(-50%); /* Ajuste fino de alinhamento */
    pointer-events: none; /* Não interfere com cliques ou arrastos */
    border-top: 1px dashed rgba(255, 255, 255, 0.3); /* Linha tracejada */
    border-bottom: 1px dashed rgba(255, 255, 255, 0.3);
}

/* Remover a linha de conexão para grupos com apenas uma OT (se necessário) */
.ot-group:has(img:only-child)::before {
    display: none;
}


.ot-base, .ot { /* Aplica-se a ambas as classes para consistência */
    width: 60px;
    height: 60px;
    border-radius: 8px;
    cursor: grab;
    border: 2px solid transparent;
    transition: transform 0.15s ease-in-out, border-color 0.2s, box-shadow 0.2s;
    object-fit: contain;
    background-color: #3a3a3a;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    z-index: 1; /* Garante que a OT fique acima da linha de conexão */
}


.ot:active {
    cursor: grabbing;
    transform: scale(1.1);
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
}

.ot.dragging {
    opacity: 0.6;
    border-color: var(--primary-red);
    box-shadow: 0 6px 12px rgba(var(--primary-red-rgb), 0.3);
    transform: scale(1.05);
}

.ot:hover {
    border-color: var(--primary-red);
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0,0,0,0.25);
}

.connector-palette {
    display: flex;
    flex-direction: column;
    gap: 20px;
    align-items: center;
}

.connector-draggable-item {
    border: 1px solid var(--medium-gray);
    border-radius: 8px;
    padding: 10px;
    background-color: #3a3a3a;
    cursor: grab;
    box-shadow: 0 3px 8px rgba(0,0,0,0.2);
    text-align: center;
    transition: transform 0.2s ease-in-out, box-shadow 0.2s, opacity 0.2s, border-color 0.2s;
    width: 150px;
}

.connector-draggable-item:hover {
    transform: translateY(-8px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.3);
    border-color: var(--primary-red);
}

.connector-draggable-item img {
    width: 100%;
    height: auto;
    display: block;
    margin: 0 auto 8px auto;
    border-radius: 5px;
}

.connector-draggable-item span {
    font-size: 0.9em;
    font-weight: 600;
    color: var(--light-text);
    word-wrap: break-word;
    display: block;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.4);
}

.connector-draggable-item.dragging {
    opacity: 0.6;
    transform: scale(0.95);
    box-shadow: 0 3px 8px rgba(0,0,0,0.15);
}

/* Coluna do meio: Área dos Postos */
.center-panel {
    flex-grow: 1; /* Permite que cresça para preencher o espaço disponível */
    border: 2px dashed var(--primary-red);
    background-color: var(--light-gray);
    padding: 25px;
    border-radius: 12px;
    min-height: 80vh; /* Aumenta a altura mínima para cobrir a tela */
    display: flex;
    flex-direction: column; /* Postos ainda empilhados verticalmente */
    gap: 30px;
    box-shadow: inset 0 0 15px rgba(0,0,0,0.2);
    overflow-x: auto; /* Adicionado para permitir rolagem horizontal no painel central */
}

.posto-container {
    border: 1px solid var(--medium-gray);
    background-color: #333;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    min-height: 180px;
    position: relative;
    display: flex;
    flex-direction: column; /* Conteúdo do posto (header + content) empilhado */
    gap: 15px;
    transition: box-shadow 0.3s ease, transform 0.1s ease;
    width: auto;
    flex-shrink: 0; /* Impede que o posto encolha se houver muitos */
}

.posto-container:hover {
    box-shadow: 0 8px 20px rgba(0,0,0,0.3);
    transform: translateY(-2px);
}

.posto-header {
    display: flex;
    align-items: center;
    gap: 20px;
    width: 100%;
    padding-bottom: 12px;
    border-bottom: 1px dashed #555;
}

.posto-header h3 {
    color: var(--primary-red);
    margin: 0;
    flex-shrink: 0;
    font-size: 1.3em;
    font-weight: 700;
}

/* IMPORTANTE: Este é o bloco que controla o layout dos conectores dentro de CADA posto */
.posto-content {
    display: flex; /* Habilita Flexbox para os conectores */
    flex-wrap: nowrap; /* ALTERADO: Impede que os conectores quebrem para a próxima linha */
    flex-direction: row; /* Conectores dispostos em linha */
    justify-content: flex-start; /* Alinha os conectores ao início da linha */
    align-items: flex-start; /* Alinha os conectores ao topo da linha */
    align-content: flex-start; /* Alinha linhas de conteúdo ao topo (mesmo com nowrap, ajuda consistência) */
    gap: 20px; /* Espaço entre os conectores */
    width: 100%; /* Ocupa 100% da largura do posto-container */
    min-height: 120px;
    overflow-x: auto; /* Adicionado para permitir rolagem horizontal se o conteúdo for maior que a largura disponível */
}

.posto-content.drag-over-posto {
    background-color: rgba(var(--primary-red-rgb), 0.2);
    border: 2px dashed var(--primary-red);
    border-radius: 8px;
}

.progress-bar-container {
    flex-grow: 1;
    height: 30px;
    background-color: var(--medium-gray);
    border-radius: 6px;
    border: 1px solid #555;
    overflow: hidden;
    position: relative;
}

.progress-bar-fill {
    height: 100%;
    width: 0%;
    background-color: #28a745;
    transition: width 0.5s ease-in-out, background-color 0.5s ease;
}

.progress-bar-fill.warning {
    background-color: #ffc107;
}

.progress-bar-fill.danger {
    background-color: #dc3545;
}

.progress-time-label {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: var(--light-text);
    font-weight: bold;
    font-size: 1em;
    text-shadow: 1px 1px 3px rgba(0,0,0,0.8);
}

/* Ajuste do Conector: Voltar ao posicionamento absoluto para imagem e checkbox */
.conector {
    position: relative; /* Essencial para os elementos absolutos internos */
    border: 1px solid var(--medium-gray);
    border-radius: 8px;
    overflow: hidden; /* Garante que elementos filhos não vazem */
    box-shadow: 0 3px 10px rgba(0,0,0,0.2);
    background-color: #3a3a3a;
    cursor: default !important;
    flex-shrink: 0; /* Garante que o conector não encolha */
    /* A altura do conector será determinada pela altura da imagem + altura do checkbox container */
    /* Usar o width/height de connectorDefinitions no JS determinará a largura real */
    /* Min-height deve ser a altura máxima de suas imagens + a altura do conector-checkbox-container */
    min-height: 680px; /* Exemplo: para uma imagem de 650px de altura + 30px de checkbox container */
    width: auto; /* A largura será definida pelo JS */
    box-sizing: border-box; /* Inclui padding e border na largura/altura */
}

/* Imagem de fundo do conector */
.conector-bg-image {
    width: 100%;
    height: 100%; /* Imagem ocupa 100% da área do conector */
    object-fit: contain;
    position: absolute; /* Posiciona a imagem como background */
    top: 0;
    left: 0;
    z-index: 1; /* Fica atrás de slots e checkbox */
    pointer-events: none;
    border-radius: 8px;
}

/* NOVO: Estilo para o container do checkbox */
.conector-checkbox-container {
    position: absolute; /* Posicionamento absoluto dentro do .conector */
    bottom: 0; /* Alinha na parte inferior do conector */
    left: 0;
    width: 100%; /* Ocupa toda a largura inferior do conector */
    z-index: 15; /* Fica acima da imagem de fundo e slots */
    padding: 5px 0;
    background-color: rgba(0, 0, 0, 0.7); /* Fundo semi-transparente para legibilidade */
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    text-align: center;
    display: flex; /* Para centralizar o checkbox e a label */
    justify-content: center;
    align-items: center;
    gap: 5px;
    border-bottom-left-radius: 8px;
    border-bottom-right-radius: 8px;
    min-height: 25px; /* Altura mínima para o container do checkbox */
    box-sizing: border-box; /* Inclui padding na altura */
}

.conector-checkbox-container label {
    font-size: 0.75em; /* Tamanho da fonte para caber mais */
    color: var(--light-text);
    font-weight: normal;
    cursor: pointer;
    text-shadow: 0 0 2px rgba(0,0,0,0.7);
    white-space: normal; /* Permite que o texto quebre em várias linhas */
    line-height: 1.2; /* Altura da linha para melhor leitura do texto quebrado */
    max-width: calc(100% - 30px); /* Garante espaço para o checkbox, ajuste se necessário */
    text-overflow: ellipsis; /* Adiciona reticências se o texto for muito longo e não couber */
    overflow: hidden; /* Oculta texto que transborda */
}

.conector-trava-checkbox {
    cursor: pointer;
    transform: scale(1.2);
    margin: 0; /* Remove margens padrão que podem causar desalinhamento */
}


.slot {
    position: absolute;
    /* width e height virão do JS */
    border: 1px dashed var(--primary-red);
    border-radius: 5px;
    background-color: rgba(255, 255, 255, 0.1);
    display: flex;
    justify-content: center;
    align-items: center;
    transition: background-color 0.2s, border-color 0.2s, box-shadow 0.2s;
    z-index: 2; /* Fica acima da imagem de fundo, mas abaixo do checkboxContainer */
    cursor: pointer;
}

.slot.drag-over {
    background-color: rgba(var(--primary-red-rgb), 0.3);
    border-color: var(--primary-red);
    box-shadow: 0 0 15px 5px rgba(var(--primary-red-rgb), 0.7);
}

.slot .ot {
    width: 90%;
    height: 90%;
    object-fit: contain;
    cursor: pointer;
    box-shadow: none;
    border: none;
    background-color: transparent;
}

.slot.has-ot {
    background-color: rgba(0, 255, 0, 0.1);
    border-color: #28a745;
}

.ot-palette.drag-over-palette {
    background-color: rgba(var(--primary-red-rgb), 0.1);
    border-color: var(--primary-red);
}

.connector-palette.drag-over-palette {
    background-color: rgba(var(--primary-red-rgb), 0.1);
    border-color: var(--primary-red);
}

.remove-connector-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: var(--primary-red);
    color: white;
    border: none;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    font-size: 1.1rem;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    z-index: 10;
    box-shadow: 0 2px 5px rgba(0,0,0,0.3);
    transition: background-color 0.2s ease, transform 0.1s ease;
}

.remove-connector-btn:hover {
    background-color: var(--secondary-red);
    transform: scale(1.1);
}

/* Scrollbar Style - para combinar com o tema escuro */
::-webkit-scrollbar {
    width: 10px;
}

::-webkit-scrollbar-track {
    background: #333;
    border-radius: 10px;
}

::-webkit-scrollbar-thumb {
    background: #555;
    border-radius: 10px;
    border: 2px solid #333;
}

::-webkit-scrollbar-thumb:hover {
    background: var(--primary-red);
}